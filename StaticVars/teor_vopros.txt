№6
Області доступу змінних.Статичні змінні.Специфікатори змінних на Сі. Напишіть програму, що використовує статичні змінні для підрахунку скільки разів  в головній програмі викликана деяка програмна функція  f().

Областю дії ідентифікатора змінної є частина програми, в якій його можна використовувати для доступу до зв’язаної з ним області пам’яті. Залежно від області дії змінна може бути локальною або глобальною.
Клас пам’яті визначає час існування та область видимості програмного об’єкта, тобто змінної. Якщо клас пам’яті не зазначений явно, то він визначається компілятором, виходячи, з контексту оголошення.
Статичними називаються змінні, які зв'язуються з коміркою пам'яті на етапі компіляції і залишаються зв'язаними з нею аж до припинення виконання програми. Статичні змінні часто виявляються корисними. Яскравим прикладом є глобальні змінні, котрі доступні в будь-якій точці програми і, отже, повинні бути зв'язані 7 з однією і тією ж коміркою протягом усього часу виконання програми. Ще однією перевагою статичних змінних є їхня ефективність. Статичні змінні допускають пряму адресацію, тоді як динамічні вимагають більш повільної непрямої адресації за допомогою вказівників і посилань. Крім того, створення і видалення статичних змінних не вимагає додаткових витрат часу. Для того щоб оголосити статичну змінну, у мові C++ використовується специфікатор static. Врахуйте, що це слово в мові С++ багатозначне. По-перше, воно є спадщиною мови С и означає змінні, що зберігають свої значення між окремими викликами функціями. По-друге, цим ключовим словом позначають особливі члени класів, що належать відразу всім його об'єктам і жодному окремо. Таким чином, зміст специфікатора static залежить від його контексту. Статичні змінні розділяються на локальні і глобальні. Локальна статична змінна, як і глобальна, не змінює адреси при виконанні програми. Однак локальна статична змінна, на відміну від глобальної, доступна лише всередині свого блоку чи функції, зберігаючи свої значення між викликами функції.  
auto — автоматична змінна, для якої пам’ять виділяється у стеку і за необхідності ініціюється кожного разу при виконанні оператора, що містить її визначення. Звільнення пам’яті відбувається при виході з блока, де описана змінна. Час її існування — з моменту опису до кінця виконання блока. Для глобальних змінних цей специфікатор не використовується, а для локальних він приймається за замовчуванням, тому задавати його явно великого сенсу немає;
extern означає, що змінна визначена в іншому місці програми (в іншому файлі або далі по тексту) і використовується для створення змінних, доступних в усіх модулях програми, де вони оголошені. При ініціюванні змінної у тому ж операторі, спеціфікатор extern ігнорується;
static — статична змінна, що має постійний час існування. Вона ініціюється один раз при першому виконанні oпe­ратора, що містить визначення змінної. Залежно від розташування оператора, описані статичні змінні можуть бути глобальними і локальними. Глобальні статичні змінні видимі тільки у тому модулі, в якому вони описані;
register — аналогічний до специфікатора auto, але пам’ять видiляється по можливості в регістрах процесора і за відсутності такої можливості у компілятора змінні обробляються як auto.